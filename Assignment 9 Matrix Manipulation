#define MaxRow 10 //array-maximum no of rows
#define MinRow 1 //array-minimum no of rows
#define MaxCol 6 //array-maximum no of columns
#define MinCol 1 //array-minimum no of columns

#include <stdio.h>


        int ReadArraySize(int,int);
        void ReadArrayA(int [][MaxCol], int, int);
        void ReadArrayB(int [][MaxCol], int, int);
        void AddArray(int [][MaxCol], int[][MaxCol], int[][MaxCol], int, int);
        void DispArrayA(int [][MaxCol], int, int);
        void DispArrayB(int [][MaxCol], int, int);
        void DispArrayTA(int [][MaxCol], int, int);
        void DispArrayTB(int [][MaxCol], int, int);
        void DispArrayTC(int [][MaxCol], int, int);

int main()
{
    int RowSize, ColSize;
    int a[MaxRow][MaxCol],//1st input array
     b[MaxRow][MaxCol],//2nd input array
     c[MaxRow][MaxCol];//resulting array



    printf("Please specify no. of rows of arrays: ");

    RowSize=ReadArraySize(MinRow,MaxRow);

    printf("Please specify no. of columns of arrays: ");


    ColSize=ReadArraySize(MinCol,MaxCol);
    printf("Array size is set to: [%d] [%d]\n", RowSize, ColSize);

    ReadArrayA(a, RowSize, ColSize);//get all value for arrays a (scanf)
    ReadArrayB(b, RowSize, ColSize);//get all value for arrays b (scanf)

//find array c[][] = array a[][] + b[][]
   AddArray(a, b, c, RowSize, ColSize);

   DispArrayA(a, RowSize, ColSize);//display a
   DispArrayB(b, RowSize, ColSize);//display b
   DispArrayC(c, RowSize, ColSize);//display c

    printf( "please type any key to show the transpose: ");
    getchar();
    DispArrayTA(a, RowSize, ColSize);//display a^T
   DispArrayTB(b, RowSize, ColSize);//display b^T
   DispArrayTC( c, RowSize, ColSize);//display c^T

    return 0;
}


int ReadArraySize(int MinSize,int MaxSize) //read array size, row then column
{
    int size;
	do{
      	printf(" range[%d..%d] : ",MinSize,MaxSize);
	    scanf("%d", &size);
   	}while(size > MaxSize || size <= MinSize);

    return size;

}


void ReadArrayA(int a[][MaxCol], int Row_size, int Col_size) { //Array dont have to return value

    int i,j;

     for (i=0;i<Row_size;i++) {

      for (j=0;j<Col_size;j++) {
      printf("Input a[%d][%d]",i,j);
      scanf("%d",&a[i][j]);
      }

     }

}

void ReadArrayB(int b[][MaxCol], int Row_size, int Col_size) {

    int i,j;

     for (i=0;i<Row_size;i++) {

      for (j=0;j<Col_size;j++) {
      printf("Input b[%d][%d]",i,j);
      scanf("%d",&b[i][j]);
      }

     }

}

void AddArray(int a[][MaxCol], int b[][MaxCol], int c[][MaxCol], int Row_size, int Col_size){
    int i,j;

    printf("Array C (Summation of Array A+B) : \n");

    for(i=0;i<Row_size;i++){
      for(j=0;j<Col_size;j++){

          c[i][j]=a[i][j]+b[i][j];
          printf("%5d ", c[i][j]);
      }
       printf("\n");
    }

}

void DispArrayA(int a[][MaxCol], int Row_size, int Col_size) {
    int i,j;
    printf("Array A :\n");

    for(i=0;i<Row_size;i++) {
        for(j=0; j<Col_size;j++){

            printf("%3d",a[i][j]);

        }
        printf("\n");
    }
    printf("\n");
}

void DispArrayB(int b[][MaxCol], int Row_size, int Col_size) {
    int i,j;
    printf("Array B :\n");

    for(i=0;i<Row_size;i++) {
        for(j=0; j<Col_size;j++){

            printf("%3d",b[i][j]);

        }
        printf("\n");
    }
    printf("\n");
}

void DispArrayC(int c[][MaxCol], int Row_size, int Col_size) {
    int i,j;
    printf("Array C :\n");

    for(i=0;i<Row_size;i++) {
        for(j=0; j<Col_size;j++){

            printf("%3d",c[i][j]);

        }
        printf("\n");
    }
    printf("\n");
}



void DispArrayTA(int a[][MaxCol], int Row_size, int Col_size) {
    int i,j;
    printf("\nTransport A : \n");

        for (i=0;i<Col_size;i++) { //4

      for (j=0;j<Row_size;j++)  //3

        printf("%3d",a[j][i]);
        printf("\n");

        }

}


void DispArrayTB(int b[][MaxCol], int Row_size, int Col_size) {
    int i,j;
    printf(" Transport B : \n");

        for (i=0;i<Col_size;i++) { //4

      for (j=0;j<Row_size;j++)  //3

        printf("%3d", b[j][i]);
        printf("\n");

        }


}

void DispArrayTC(int c[][MaxCol], int Row_size, int Col_size) {
    int i,j;
    printf(" Transport C : \n");

        for (i=0;i<Col_size;i++) { //4

      for (j=0;j<Row_size;j++)  //3

        printf("%3d", c[j][i]);
        printf("\n");

        }

}

